
<!-- HW FILTERS SNIPPET ‚úÖ {{ 'now' | date: '%Y-%m-%d %H:%M:%S' }} -->
<section class="filters-container" data-hw-filters>
  <h2 class="filters-title">üîç Filter</h2>
<!-- Mobile-Trigger -->
<button type="button" class="hw-filter-mobile-btn" data-mobile-open>Filter √∂ffnen</button>
<div class="hw-filter-overlay" data-overlay hidden></div>

  <!-- Aktive Filter -->
  <div class="active-filters" data-active-filters hidden>
    <strong>Aktive Filter:</strong>
    <div class="active-filters-list"></div>
    <button type="button" class="reset-btn" data-reset>Alle l√∂schen ‚úï</button>
  </div>

<div class="hw-filter-panel" data-mobile-panel>
  <div class="hw-filter-panel-head">
    <strong>Filter</strong>
    <button type="button" class="hw-filter-close" data-mobile-close>‚úï</button>
  </div>

  <form id="filters-form" class="filters-form">
    <!-- Preis -->
    <div class="filter-block">
      <button type="button" class="filter-toggle" data-target="price">Preis</button>
      <div id="filter-price" class="filter-panel">
        <label>von</label>
        <input type="number" step="0.01" placeholder="z. B. 2.99" data-min>
        <label>bis</label>
        <input type="number" step="0.01" placeholder="z. B. 9.99" data-max>
      </div>
    </div>

    <!-- Farbe -->
    <div class="filter-block">
      <button type="button" class="filter-toggle" data-target="color">Farbe</button>
      <div id="filter-color" class="filter-panel">
        <label><input type="checkbox" data-color value="T√ºrkis">T√ºrkis</label>
        <label><input type="checkbox" data-color value="Blau">Blau</label>
        <label><input type="checkbox" data-color value="Rot">Rot</label>
        <label><input type="checkbox" data-color value="Orange">Orange</label>
        <label><input type="checkbox" data-color value="Schwarz">Schwarz</label>
        <label><input type="checkbox" data-color value="Wei√ü">Wei√ü</label>
      </div>
    </div>

    <!-- Marke -->
    <div class="filter-block">
      <button type="button" class="filter-toggle" data-target="brand">Marke</button>
      <div id="filter-brand" class="filter-panel">
        <label><input type="checkbox" data-brand value="Ferrari">Ferrari</label>
        <label><input type="checkbox" data-brand value="Porsche">Porsche</label>
        <label><input type="checkbox" data-brand value="Lamborghini">Lamborghini</label>
        <label><input type="checkbox" data-brand value="BMW">BMW</label>
        <label><input type="checkbox" data-brand value="Mercedes-Benz">Mercedes-Benz</label>
        <label><input type="checkbox" data-brand value="Koenigsegg">Koenigsegg</label>
        <label><input type="checkbox" data-brand value="Toyota">Toyota</label>
      </div>
    </div>

    <!-- Serie -->
    <div class="filter-block">
      <button type="button" class="filter-toggle" data-target="series">Serie</button>
      <div id="filter-series" class="filter-panel">
        <label><input type="checkbox" data-series value="Mainline">Mainline</label>
        <label><input type="checkbox" data-series value="Premium">Premium</label>
        <label><input type="checkbox" data-series value="ID">ID</label>
      </div>
    </div>

    <!-- Aktionen -->
    <div class="filter-actions">
      <button type="submit" class="apply-btn" data-apply>Filter anwenden</button>
      <button type="button" class="reset-btn" data-reset>Zur√ºcksetzen</button>
    </div>
    <div class="filter-actions mobile-only">
      <button type="submit" class="apply-btn" data-apply>√úbernehmen</button>
    </div>
  </form>
</section>

<style>
.filters-container{background:#fff;border:2px solid #0046BE;border-radius:10px;padding:16px;margin:16px 0}
.filters-title{margin:0 0 12px;color:#0046BE;font-weight:700;text-align:center}
.filter-block{margin-bottom:12px}
.filter-toggle{width:100%;background:#0046BE;color:#fff;border:0;border-radius:6px;padding:8px;font-weight:700;cursor:pointer}
.filter-toggle:hover{background:#FF6B00}
.filter-panel{display:none;padding:8px;margin-top:6px;border:1px solid #ddd;border-radius:6px;background:#f9f9f9}
.filter-panel label{display:block;margin:4px 0}
.filter-actions{display:flex;gap:10px;justify-content:center;margin-top:16px}
.apply-btn{background:#FF6B00;color:#fff;padding:8px 16px;border:0;border-radius:6px;font-weight:700;cursor:pointer}
.reset-btn{background:#ddd;color:#333;padding:8px 16px;border:0;border-radius:6px;font-weight:700;cursor:pointer}

/* Aktive Filter */
.active-filters{display:flex;align-items:center;flex-wrap:wrap;gap:8px;background:#f7f7f7;border:1px solid #ddd;border-radius:8px;padding:10px;margin-bottom:12px}
.active-filters-list{display:flex;flex-wrap:wrap;gap:6px}
.filter-chip{background:#e5e5e5;color:#333;padding:4px 10px;border-radius:6px;font-size:14px;font-weight:600;cursor:pointer;display:flex;align-items:center;gap:6px}
.filter-chip:hover{background:#d5d5d5}
.filter-chip span{font-size:16px;line-height:1;color:#666}
</style>

<script>
document.addEventListener('DOMContentLoaded', ()=>{
  const root = document.querySelector('[data-hw-filters]');
  if(!root) return;
  const activeBox = root.querySelector('[data-active-filters]');
  const activeList = root.querySelector('.active-filters-list');

  // Panels togglen
  root.querySelectorAll('.filter-toggle').forEach(btn=>{
    btn.addEventListener('click', ()=>{
      const p = document.getElementById('filter-'+btn.dataset.target);
      if(!p) return;
      p.style.display = (p.style.display==='block' ? 'none' : 'block');
    });
  });

  // Shopify Filter URLs
  const PREFIX_COLOR='Farbe:', PREFIX_BRAND='Marke:', PREFIX_SERIES='Serie:';
  const toCents=v=>{const n=Math.round(parseFloat((v||'').replace(',','.'))*100);return isNaN(n)?null:n;};

  function buildUrl(){
    const url=new URL(window.location.href);
    [...url.searchParams.keys()].forEach(k=>{if(k.startsWith('filter.'))url.searchParams.delete(k);});
    const min=root.querySelector('[data-min]')?.value;
    const max=root.querySelector('[data-max]')?.value;
    const minC=toCents(min),maxC=toCents(max);
    if(min&&minC!==null)url.searchParams.set('filter.p.price.gte',String(minC));
    if(max&&maxC!==null)url.searchParams.set('filter.p.price.lte',String(maxC));
    root.querySelectorAll('[data-color]:checked').forEach(i=>url.searchParams.append('filter.p.tag',`${PREFIX_COLOR} ${i.value}`));
    root.querySelectorAll('[data-brand]:checked').forEach(i=>url.searchParams.append('filter.p.tag',`${PREFIX_BRAND} ${i.value}`));
    root.querySelectorAll('[data-series]:checked').forEach(i=>url.searchParams.append('filter.p.tag',`${PREFIX_SERIES} ${i.value}`));
    return url;
  }

  root.querySelector('[data-apply]')?.addEventListener('click',e=>{
    e.preventDefault();
    window.location.href=buildUrl().toString();
  });

  root.querySelectorAll('[data-reset]').forEach(btn=>{
    btn.addEventListener('click',()=>{
      const url=new URL(window.location.href);
      [...url.searchParams.keys()].forEach(k=>{if(k.startsWith('filter.'))url.searchParams.delete(k);});
      window.location.href=url.toString();
    });
  });

  // Wiederherstellen + Chips anzeigen
  (function restore(){
    const url=new URL(window.location.href);
    const tags=url.searchParams.getAll('filter.p.tag');
    const gte=url.searchParams.get('filter.p.price.gte');
    const lte=url.searchParams.get('filter.p.price.lte');
    activeList.innerHTML='';
    const addChip=(label,value,filterKey)=>{
      const chip=document.createElement('div');
      chip.className='filter-chip';
      chip.innerHTML=`${label}: ${value} <span>‚úï</span>`;
      chip.addEventListener('click',()=>{
        url.searchParams.delete(filterKey);
        window.location.href=url.toString();
      });
      activeList.appendChild(chip);
    };
    if(gte||lte){addChip('Preis',`${gte?parseInt(gte,10)/100:''}‚Ç¨ - ${lte?parseInt(lte,10)/100:''}‚Ç¨`,'filter.p.price.gte');}
    tags.forEach(t=>{
      const decoded=decodeURIComponent(t);
      const [prefix,val]=decoded.split(': ');
      addChip(prefix,val,'filter.p.tag');
    });
    if(tags.length||gte||lte) activeBox.hidden=false;
// Re-render bei AJAX
document.addEventListener('filters:refresh', restore);
  })();
});
// --- AJAX FILTERING (ohne Reload) ---
const grid = document.querySelector('[data-section-id="product-grid"]') || document.querySelector('.product-grid');
if(grid){
  const applyBtn = root.querySelector('[data-apply]');
  applyBtn?.addEventListener('click', async (e)=>{
    e.preventDefault();
    const url = buildUrl();
    history.pushState({}, '', url.toString());

    // Ladeindikator
    grid.style.opacity = '0.3';

    try {
      // Shopify Section-API: ruft nur den Produkt-Grid neu ab
      const res = await fetch(url.toString() + '&section_id=product-grid');
      const text = await res.text();
      const parser = new DOMParser();
      const html = parser.parseFromString(text, 'text/html');
      const newGrid = html.querySelector('[data-section-id="product-grid"]') || html.querySelector('.product-grid');
      if(newGrid) grid.innerHTML = newGrid.innerHTML;
    } catch(err){
      console.error('Filter AJAX Error:', err);
    } finally {
      grid.style.opacity = '1';
    }

    // Aktive Filter sofort aktualisieren (kein Reload)
    const event = new Event('filters:refresh');
    document.dispatchEvent(event);
  });
}
</script>
