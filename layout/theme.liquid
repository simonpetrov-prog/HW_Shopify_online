<!doctype html>
<html lang="de">

<head>
  <meta charset="utf-8">
  <!-- Viewport: kein Zoom, volle Breite, iOS Safe Areas -->
  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no, viewport-fit=cover">

  <title>{{ page_title }} – {{ settings.shop_name | default: shop.name }}</title>

  {{ content_for_header }}
  {{ settings.type_body_font | font_face: font_display: 'swap' }}
{{ settings.type_header_font | font_face: font_display: 'swap' }}
  {{ 'base.css' | asset_url | stylesheet_tag }}

  <!-- Basis-Variablen + Grundstyles (konsolidiert) -->
  <style id="hw-vars">


/* Mobile Header Fixes */
@media (max-width: 768px){
  .header__heading .header__heading-link{ font-size:0; line-height:0; }
}
  /* Logo-Bild kompakt halten */
  .header__heading .header__heading-link img{
    max-height:32px !important; height:auto; width:auto; display:inline-block;
  }

  /* Menüzeile darf seitlich scrollen statt umbrechen/überlappen */
  nav.header__inline-menu, .header__inline-menu .list-menu{
    overflow-x:auto; -webkit-overflow-scrolling:touch; scrollbar-width:none;
  }
  nav.header__inline-menu::-webkit-scrollbar, .header__inline-menu .list-menu::-webkit-scrollbar{ display:none; }

/* aktive Nav-Leiste zentriert */
.header .header__nav a.nav__link{
  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding-bottom: 6px;
}

.header .header__nav a.nav__link.is-active::after{
  content: "";
  position: absolute;
  bottom: -8px;
  left: 50% !important;
  transform: translateX(-50%) !important;
  width: 24px;               /* Länge des Strichs */
  height: 3px;
  border-radius: 2px;
  background: var(--accent, #FF6B00);
}

  /* Falls Textlinks zu breit werden: leicht kleinere Schrift */
  .list-menu__item{ font-size:14px; }
}

/* Warenkorb-Badge sicher positionieren (falls nicht schon vorhanden) */
a[href*="/cart"]{ position:relative; display:inline-flex; align-items:center; gap:6px; }
.header__cart-count{
  position:absolute; right:-8px; top:-6px;
  background:#FF6B00; color:#fff; border-radius:999px;
  padding:2px 6px; font-size:12px; line-height:1; font-weight:800;
}

.hw-bc{display:flex;flex-wrap:wrap;gap:8px;align-items:center;padding:8px 12px;margin:6px 0 10px;border:1px solid #eee;border-radius:10px;background:#fafafa}
.hw-bc__link{color:#0046BE;text-decoration:none;font-weight:700}
.hw-bc__link:hover{color:#FF6B00}
.hw-bc__sep{opacity:.6}
.hw-bc__current{font-weight:800;color:#1f2937}

  :root{
    --font-body: {{ settings.type_body_font.family | default: 'system-ui' }}, {{ settings.type_body_font.fallback_families | default: 'sans-serif' }};
    --font-heading: {{ settings.type_header_font.family | default: 'system-ui' }}, {{ settings.type_header_font.fallback_families | default: 'sans-serif' }};
    --primary:#0046BE;   /* Königsblau */
    --accent:#FF6B00;    /* Orange */
    --text:#111;
    --border:#e5e5e5;
    --bg:#fff;
  }

 html,body{background:var(--bg); color:var(--text); font-family:var(--font-body); }
  h1,h2,h3,h4,.h1,.h2,.h3,.h4{ font-family:var(--font-heading); }
a{color:var(--primary); text-decoration:none;}
  a:hover{color:var(--accent);}

  .container{max-width:1200px;margin:0 auto;padding:0 20px;}
  .product-grid.loading { opacity:.3; transition:.2s; pointer-events:none; }

  /* Buttons */
  .btn,button.btn{
    background:var(--primary); color:#fff; border:0; border-radius:10px;
    padding:10px 16px; font-weight:800; letter-spacing:.2px; cursor:pointer;
    transition:transform .06s ease, filter .12s ease, box-shadow .12s ease;
    box-shadow:0 3px 0 rgba(0,0,0,.12);
  }
  .btn:hover{ filter:brightness(.96); transform:translateY(-1px); }
  .btn:active{ transform:translateY(0); box-shadow:none; }
  .btn--primary{ background:var(--accent); }
  .btn--primary:hover{ filter:brightness(.94); }
  .btn-outline{
    background:transparent; color:var(--primary); border:2px solid var(--primary);
    border-radius:10px; padding:8px 14px; font-weight:800;
  }
  .btn-outline:hover{ background:var(--primary); color:#fff; }

  /* Header / Navigation (polish) */
  .header{position:sticky;top:0;background:#fff;border-bottom:1px solid var(--border);z-index:30;transition:box-shadow .2s ease;}
  .header.is-scrolled{box-shadow:0 6px 22px rgba(0,0,0,.06);}
  .header__inner{display:flex;align-items:center;justify-content:space-between;gap:16px;padding:12px 20px;}
  .header__nav{display:flex;gap:12px}
  .nav__link{padding:8px 12px;border-radius:999px;font-weight:800;color:#111}
  .nav__link:hover{background:rgba(0,70,190,.08);color:var(--primary)}
  .nav__link.is-active{background:var(--primary);color:#fff;position:relative}
  .nav__link.is-active::after{
    content:'';
    position:absolute;left:50%;transform:translateX(-50%);
    bottom:-8px;height:3px;width:24px;border-radius:2px;background:var(--accent);
  }

  /* Cart Button */
  .cart-btn{display:flex;align-items:center;gap:10px;background:var(--primary);color:#fff;border:0;border-radius:12px;padding:9px 14px;font-weight:800;cursor:pointer}
  .cart-btn:hover{filter:brightness(.96)}
  .cart-badge{min-width:22px;height:22px;border-radius:999px;display:inline-flex;align-items:center;justify-content:center;background:#000;color:#fff;font-size:12px;padding:0 6px}

  /* Cards / Grid */
  .product-card,.product{border:1px solid var(--border);border-radius:12px;background:#fff;transition:transform .12s ease,box-shadow .12s ease}
  .product-card:hover,.product:hover{transform:translateY(-2px);box-shadow:0 6px 18px rgba(0,0,0,.06)}
  .product img{background:#fff;border-radius:8px}

  /* Deal Badge */
  .deal-badge{position:absolute;left:10px;top:10px;background:var(--accent);color:#fff;font-weight:800;padding:4px 8px;border-radius:999px;font-size:12px}

  /* Hero Feinheiten */
  .hero-banner__overlay{background:#000}
  .hero-banner__content h1{color:#fff}
  .hero-banner .sub{color:#fff;opacity:.92}
  @media (max-width: 900px){ .hero-banner{ height:56vh; } }
  @media (max-width: 640px){
    .hero-banner{ height:52vh; }
    .hero-banner__overlay{opacity:.55}
  }

  /* Mobile Header Helper (Logo + Quick Buttons) */
  @media (max-width: 768px){
    .header__heading .header__heading-link { font-size:0; line-height:0; }
    .header__heading .header__heading-link img { height:32px !important; width:auto; display:inline-block; }

    .hw-only-mobile { display:inline-flex !important; }
    .hw-quick{
      display:inline-flex; gap:8px; margin-left:8px; vertical-align:middle;
      flex:0 0 auto; white-space:nowrap;
    }
    .hw-qbtn{
      display:inline-flex; align-items:center; justify-content:center;
      padding:6px 10px; border-radius:999px; background:#eee; color:#1f2937;
      border:1px solid #ddd; font-weight:800; text-decoration:none; flex:0 0 auto; white-space:nowrap;
    }
    .hw-qbtn:active { transform: translateY(1px); }
    .header__inline-menu { flex:0 1 auto; }
    .header__icons { margin-left:auto; gap:8px; }
    nav.header__inline-menu, .header__inline-menu .list-menu {
      overflow-x:auto; -webkit-overflow-scrolling:touch; scrollbar-width:none;
    }
    nav.header__inline-menu::-webkit-scrollbar, .header__inline-menu .list-menu::-webkit-scrollbar { display:none; }
  }
  @media (min-width: 769px){
    .hw-only-mobile { display:none !important; }
  }

  /* Filter-Chips (grau) */
  .hw-chip{
    display:inline-flex;align-items:center;gap:8px;
    background:#eee;color:#333;border:1px solid #ddd;border-radius:999px;
    padding:6px 10px;margin:4px 6px 0 0;font-weight:600;cursor:pointer;user-select:none;
  }
  .hw-chip input{ display:none; }
  .hw-chip .dot{ width:14px;height:14px;border-radius:50%;border:1px solid rgba(0,0,0,.2);display:inline-block; }
  .hw-chip.is-checked{background:#e0e0e0;border-color:#cfcfcf;}
  </style>

<style id="hw-filter-css-fix">
  /* Panels standardmäßig zu */
  .filter-panel{ display:none; }

  /* geöffnet per Klasse */
  .filter-panel.is-open{ display:block; }

  /* Sicherheit: Buttons bleiben klickbar */
  .filter-toggle{ pointer-events:auto; }

  /* Falls irgendwo noch ein Overlay stört: nur aktiv bei offenem Panel */
  .hw-filter-overlay[hidden]{ display:none !important; }
  .hw-filter-overlay{ pointer-events:none; }
  .filters-container.is-open .hw-filter-overlay{ pointer-events:auto; }

/* PDP Tabs */
.pdp-tabs{display:flex;gap:8px;margin:16px 0}
.pdp-tab{padding:8px 12px;border:1px solid #ddd;border-radius:10px;background:#f6f7fb;color:#111;font-weight:800;cursor:pointer}
.pdp-tab.is-active{background:var(--primary);color:#fff;border-color:var(--primary)}
.pdp-panel{display:none;border:1px solid #eee;border-radius:12px;padding:14px;background:#fff}
.pdp-panel.is-active{display:block}

/* PDP Tabs – kompakt, klar, kontrastreich */
.pdp-tabs{display:flex;gap:8px;flex-wrap:wrap;align-items:center;margin:14px 0 8px}
.pdp-tab{
  appearance:none;
  border:1px solid #e5e7eb;
  background:#f6f7fb;
  color:#111;
  padding:10px 14px;
  border-radius:12px;
  font-weight:800;
  line-height:1;
  cursor:pointer;
  transition:.15s ease;
}
.pdp-tab:hover{border-color:var(--primary,#0046BE)}
.pdp-tab.is-active{
  background:var(--primary,#0046BE);
  border-color:var(--primary,#0046BE);
  color:#fff;
  box-shadow:0 6px 18px rgba(0,70,190,.16);
}

.pdp-panels{margin-top:10px}
.pdp-panel{
  display:none;
  border:1px solid #eee;
  border-radius:12px;
  padding:14px;
  background:#fff;
}
.pdp-panel.is-active{display:block}

/* Mobile etwas kleiner */
@media (max-width:640px){
  .pdp-tab{padding:8px 12px;font-size:14px}
}

</style>

<style id="hw-grid-loading">
  .product-grid.loading { opacity:.35; pointer-events:none; transition:opacity .2s; }
</style>

  <!-- Header Shadow on scroll (einmalig) -->
  <script>
  document.addEventListener('scroll', function(){
    var h=document.querySelector('.header');
    if(!h) return;
    h.classList.toggle('is-scrolled', window.scrollY>8);
  });
  </script>

  <!-- Farb-Checkboxen -> Chips (robust, ohne Arrow-Functions) -->
  <script id="hw-color-chips">
  (function () {
    try {
      function norm(s){
        if(!s) return '';
        try {
          return s.toString().trim().toLowerCase()
            .normalize('NFD').replace(/[\u0300-\u036f]/g,'')
            .replace(/ß/g,'ss');
        } catch(e){
          return s.toString().trim().toLowerCase()
            .replace(/ä/g,'ae').replace(/ö/g,'oe').replace(/ü/g,'ue').replace(/ß/g,'ss');
        }
      }
      var COLOR_MAP = {
        'tuerkis':'#1abc9c','blau':'#1e3a8a','rot':'#e11d48','orange':'#f97316',
        'schwarz':'#111827','weiss':'#ffffff','grau':'#9ca3af','gelb':'#f59e0b',
        'grun':'#16a34a','lila':'#7c3aed','pink':'#db2777'
      };
      var panels = document.querySelectorAll('#filter-color, [data-panel="color"]');
      if (!panels || !panels.length) return;
      for (var p = 0; p < panels.length; p++) {
        var panel = panels[p];
        var labels = panel.querySelectorAll('label');
        for (var i = 0; i < labels.length; i++) {
          var label = labels[i];
          if (label.classList && label.classList.contains('hw-chip')) continue;
          var input = label.querySelector('input[type="checkbox"]');
          if (!input) continue;
          var rawName = (input.value || label.textContent || '').trim();
          var key = norm(rawName).replace(/ä/g,'ae').replace(/ö/g,'oe').replace(/ü/g,'ue');
          var dotColor = COLOR_MAP[key] || '#ddd';

          var dot = document.createElement('span');
          dot.className = 'dot';
          dot.style.width = '14px';
          dot.style.height = '14px';
          dot.style.borderRadius = '50%';
          dot.style.border = '1px solid rgba(0,0,0,.2)';
          dot.style.display = 'inline-block';
          dot.style.background = dotColor;

          // alte Knoten außer input entfernen
          var keep = [input]; var toRemove = [];
          for (var n = 0; n < label.childNodes.length; n++) {
            var node = label.childNodes[n];
            if (keep.indexOf(node) === -1) toRemove.push(node);
          }
          for (var r = 0; r < toRemove.length; r++) {
            if (toRemove[r] && toRemove[r].parentNode === label) label.removeChild(toRemove[r]);
          }
          if (label.classList) label.classList.add('hw-chip');
          label.appendChild(input);
          label.appendChild(dot);
          label.appendChild(document.createTextNode(' ' + rawName));

          var sync = (function(inp, lab){
            return function(){
              if (!lab || !lab.classList) return;
              if (inp.checked) lab.classList.add('is-checked');
              else lab.classList.remove('is-checked');
            };
          })(input, label);
          input.addEventListener('change', sync);
          sync();
        }
      }
    } catch (err) {
      if (console && console.warn) console.warn('HW color chips init failed:', err);
    }
  })();

  </script>

  <!-- Zoom-Blocker / iOS Gesten -->
  <style>
    html, body { overflow-x: hidden; }
    html { -webkit-text-size-adjust: 100%; }
    html, body { touch-action: manipulation; }
  </style>
  <script>
    ['gesturestart','gesturechange','gestureend'].forEach(function(ev){
      document.addEventListener(ev, function(e){ e.preventDefault(); }, { passive:false });
    });
    (function(){
      var lastTouchEnd = 0;
      document.addEventListener('touchend', function(e) {
        var now = Date.now();
        if (now - lastTouchEnd <= 300) { e.preventDefault(); }
        lastTouchEnd = now;
      }, { passive:false });
    })();
  </script>

<script>
/* Auto-Fix: doppelte Header auf Produktseiten entfernen (nur dort) */
document.addEventListener('DOMContentLoaded', function () {
  if (!/\btemplate-product\b/.test(document.body.className)) return;

  // Sammle alle möglichen Header-Elemente, die Themes nutzen
  var headers = document.querySelectorAll('header, .site-header, header[role="banner"], .header');

  if (headers.length > 1) {
    // Ersten behalten, alle weiteren entfernen
    for (var i = 1; i < headers.length; i++) {
      if (headers[i] && headers[i].parentNode) {
        headers[i].parentNode.removeChild(headers[i]);
      }
    }
  }
});
</script>

<script id="hw-filter-toggle-fix">
document.addEventListener('DOMContentLoaded', function(){
  // Ein globaler Click-Listener reicht überall (Snippet/Section egal)
  document.addEventListener('click', function(e){
    var btn = e.target.closest('.filter-toggle');
    if(!btn) return;

    // Zielpanel ID nach Schema: #filter-{data-target}
    var target = btn.getAttribute('data-target');
    if(!target) return;

    var panel = document.getElementById('filter-' + target);
    if(!panel) return;

    e.preventDefault();
    panel.classList.toggle('is-open');
  }, true);
});

#toast-root{position:fixed;left:50%;transform:translateX(-50%);bottom:16px;z-index:9999}
.hw-toast{
  background:#111;color:#fff;padding:10px 14px;border-radius:10px;
  box-shadow:0 8px 20px rgba(0,0,0,.2);margin-top:8px;font-weight:700;min-width:220px;text-align:center
}
.hw-toast--ok{background:#0f766e}   /* grünlich */
.hw-toast--info{background:#1f2937} /* dunkelgrau */
.hw-toast--err{background:#b91c1c}  /* rot */

</script>

<script id="hw-ajax-filters">
document.addEventListener('DOMContentLoaded', function(){
  var root = document.querySelector('[data-hw-filters]') || document;
  var applyBtn = root.querySelector('[data-apply]') || document.querySelector('[data-apply]');
  var form = root.querySelector('#filters-form') || document.querySelector('#filters-form');

  // Finde das Grid robust (versch. Themes)
  function findGrid(){
    return document.querySelector('#ProductGridContainer') ||
           document.querySelector('[data-section-id="product-grid"]') ||
           document.querySelector('[data-id="product-grid"]') ||
           document.querySelector('.product-grid');
  }

  // Falls du später anders heißt, hier ergänzen:
  function guessSectionId(fallback){
    var el = document.querySelector('[data-section-id]'); // oft am Grid
    if(el && el.getAttribute('data-section-id')) return el.getAttribute('data-section-id');
    return fallback || 'product-grid'; // gängiger Name
  }

  // URL aus UI bauen (kompatibel zu deiner aktuellen Struktur)
  function toCents(v){
    var n = Math.round(parseFloat((v||'').toString().replace(',','.'))*100);
    return isNaN(n) ? null : n;
  }
  function buildUrlFromUI(){
    var url = new URL(window.location.href);

    // alte filter.* entfernen
    Array.from(url.searchParams.keys()).forEach(function(k){
      if(k.indexOf('filter.') === 0) url.searchParams.delete(k);
    });

    // Preis
    var minI = (root.querySelector('[data-min]') || document.querySelector('[data-min]'));
    var maxI = (root.querySelector('[data-max]') || document.querySelector('[data-max]'));
    var min = minI && minI.value, max = maxI && maxI.value;
    var minC = toCents(min), maxC = toCents(max);
    if(min && minC!==null) url.searchParams.set('filter.p.price.gte', String(minC));
    if(max && maxC!==null) url.searchParams.set('filter.p.price.lte', String(maxC));

    // Tags (Farbe / Marke / Serie)
    function addChecked(sel, prefix){
      (root.querySelectorAll(sel) || []).forEach(function(inp){
        if(inp.checked){ url.searchParams.append('filter.p.tag', prefix+' '+inp.value); }
      });
    }
    addChecked('[data-color]',  'Farbe:');
    addChecked('[data-brand]',  'Marke:');
    addChecked('[data-series]', 'Serie:');

    return url;
  }

  async function fetchGrid(url){
    var grid = findGrid();
    if(!grid) return;

    // Grid dezent „laden“
    grid.classList.add('loading');

    // Section-ID raten / lesen
    var secId = guessSectionId('product-grid');

    // Request: nur die Grid-Section neu laden
    var apiUrl = url.toString();
    apiUrl += (apiUrl.indexOf('?')>-1 ? '&' : '?') + 'section_id=' + encodeURIComponent(secId);

    try{
      var res = await fetch(apiUrl, { credentials:'same-origin' });
      var html = await res.text();
      var doc = new DOMParser().parseFromString(html, 'text/html');

      // neue Grid-HTML extrahieren
      var newGrid = doc.querySelector('#ProductGridContainer') ||
                    doc.querySelector('[data-section-id="product-grid"]') ||
                    doc.querySelector('[data-id="product-grid"]') ||
                    doc.querySelector('.product-grid');
      if(newGrid){
        grid.innerHTML = newGrid.innerHTML;
        grid.classList.remove('loading');
      } else {
        grid.classList.remove('loading');
        console.warn('HW AJAX: Grid selector not found in response');
      }

      // URL in der Leiste aktualisieren (Back/Share funktioniert)
      history.pushState({}, '', url.toString());

      // Event feuern, damit Chips/Counter etc. refreshen können
      document.dispatchEvent(new Event('filters:refresh'));
    }catch(err){
      grid.classList.remove('loading');
      console.warn('HW AJAX error:', err);
    }
  }

  // Klick auf "Filter anwenden" abfangen (oder Form-Submit)
  function startAjax(e){
    if(e){ e.preventDefault(); }
    var url = buildUrlFromUI();
    fetchGrid(url);
  }

  if(applyBtn){ applyBtn.addEventListener('click', startAjax); }
  if(form){ form.addEventListener('submit', startAjax); }
});




</script>

 <script>
window.showToast = function(msg, type='ok', ms=2200){
  const root = document.getElementById('toast-root'); if(!root) return;
  const el = document.createElement('div');
  el.className = 'hw-toast hw-toast--' + (type==='err'?'err':type==='info'?'info':'ok');
  el.textContent = msg;
  root.appendChild(el);
  setTimeout(()=>{ el.style.opacity='0'; el.style.transform='translateY(6px)'; }, ms);
  setTimeout(()=>{ root.removeChild(el); }, ms+400);
};
</script>



</head>


  <body>
    {{ content_for_layout }}

<div id="toast-root" aria-live="polite" aria-atomic="true"></div>

<script>
// Fängt alle fetch-Aufrufe ab (nur für unseren Shop, keine externen)
// und zeigt je nach Endpoint einen Toast an.
(function(){
  if (!window.fetch) return;
  const _fetch = window.fetch;
  window.fetch = async function(input, init){
    const res = await _fetch(input, init);
    try {
      const url = (typeof input === 'string') ? input : input.url;
      if (url && url.indexOf('/cart/add') !== -1) {
        if (res.ok) showToast('✅ Produkt in den Warenkorb gelegt','ok');
        else        showToast('⚠️ Konnte nicht hinzugefügt werden','err');
      }
      if (url && url.indexOf('/cart/change') !== -1) {
        if (res.ok) showToast('Menge aktualisiert','info');
      }
      if (url && url.indexOf('/cart/clear') !== -1) {
        if (res.ok) showToast('🧹 Warenkorb geleert','info');
      }
      if (url && url.indexOf('/cart/update') !== -1) {
        if (res.ok) showToast('Warenkorb aktualisiert','info');
      }
    } catch(e){}
    return res;
  };

  // Bonus: sehr alte Themes nutzen manchmal XHR statt fetch
  if (window.XMLHttpRequest) {
    const _open = XMLHttpRequest.prototype.open;
    XMLHttpRequest.prototype.open = function(method, url){
      this.__hw_url = url;
      return _open.apply(this, arguments);
    };
    const _send = XMLHttpRequest.prototype.send;
    XMLHttpRequest.prototype.send = function(){
      this.addEventListener('load', function(){
        try {
          const url = this.__hw_url || '';
          if (url.indexOf('/cart/add') !== -1) {
            (this.status>=200 && this.status<300)
              ? showToast('✅ Produkt in den Warenkorb gelegt','ok')
              : showToast('⚠️ Konnte nicht hinzugefügt werden','err');
          }
          if (url.indexOf('/cart/change') !== -1) {
            (this.status>=200 && this.status<300)
              ? showToast('Menge aktualisiert','info')
              : null;
          }
        } catch(e){}
      });
      return _send.apply(this, arguments);
    };
  }
})();
</script>

  </body>
</html>
